{"version":3,"sources":["globalStyles.js","theme.js","store/actions.js","services/cookieService.js","components/UnitIcon.tsx","components/Header.tsx","services/weatherService.js","components/ErrorMessage.tsx","utils/errorMessage.ts","components/Temperature.tsx","components/ConditionIcon.tsx","components/Current.tsx","components/Forecast.tsx","pages/Home.tsx","pages/Favourites.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","store/appReducer.ts","store/store.js","index.tsx"],"names":["GlobalStyles","createGlobalStyle","theme","body","text","titleColor","inputBcg","darkTheme","lightTheme","appOrange","setUnit","unit","dispatch","_setUnit","_addCity","city","type","_removeCity","id","_setMode","isDark","setCookie","cName","cValue","expDays","date","Date","setTime","getTime","expires","toUTCString","document","cookie","Unit","styled","img","mapDispatchToProps","connect","state","tempUnit","appStore","props","useState","currUnit","setCurrUnit","cookieName","useEffect","storeUnit","isCels","isWhite","navbar","unitIconSrc","unitTitle","src","title","alt","onClick","AppHeader","div","Logo","h1","MenuItem","Links","SetMode","setMode","modeIconSrc","modeTitle","to","queryCity","q","a","query","BASE_URL","Axios","get","res","data","console","log","dir","getCurrentWeather","cityCode","getForecast","getFarenheitForecast","Toaster","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","className","displayErrMsg","txt","toast","error","progress","undefined","TempContainer","Temp","p","Temperature","temp","ConditionImage","ConditionIcon","idx","index","flexAlignCenter","DailyContaier","CardTitle","LikeBtn","CityName","h2","TempAndCondition","ConditionText","removeCity","addCity","favCities","currWeather","setCurrWeather","isFav","some","currConditions","name","getCurrWeatherData","newCities","JSON","stringify","isDay","isDayTime","heartIconSrc","heartTitle","containerBgc","style","backgroundColor","currTemp","Metric","Value","Imperial","Math","round","WeatherIcon","WeatherText","Loading","ForecastContainer","DayForecast","Day","Conditions","Min","Max","forecast","setForecast","DailyForecasts","getForecastData","length","map","daily","moment","format","Minimum","Night","Icon","Maximum","HomeContainer","Title","CitySearch","SearchInput","input","CitiesList","Option","inputCities","setInputCities","isOpen","setOpen","currCity","setCurrCity","handleChange","e","target","value","selectCity","placeholder","onChange","ClickAwayListener","onClickAway","Key","LocalizedName","Container","Grid","container","spacing","alignItems","item","xs","sm","md","xl","FavouritesContainer","Message","CityCard","setFavCities","Note","h3","Footer","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cDecoded","decodeURIComponent","Object","fromEntries","split","val","getCookieValues","darkMode","parse","initialState","appReducer","action","filter","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c0a7dba0.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.50s linear; \r\n  }\r\n  h1, h2 {\r\n    color: ${({ theme }) => theme.titleColor};\r\n  }\r\n  input {\r\n    background-color: ${({ theme }) => theme.inputBcg};\r\n    color: ${({ theme }) => theme.text};\r\n    border: 2px solid black;\r\n  }\r\n  `;\r\n","export const darkTheme = {\r\n  body: \"#010101\",\r\n  text: \"#ffffff\",\r\n  titleColor: \"#5f9ea0\",\r\n  inputBcg: \"#b0c4de\",\r\n};\r\n\r\nexport const lightTheme = {\r\n  body: \"#ffffff\",\r\n  text: \"#000000\",\r\n};\r\n\r\nexport const appOrange = \"#ed8224\";\r\n","export function addCity(city) {\r\n  return (dispatch) => {\r\n    dispatch(_addCity(city));\r\n  };\r\n}\r\n\r\nexport function removeCity(id) {\r\n  return (dispatch) => {\r\n    dispatch(_removeCity(id));\r\n  };\r\n}\r\n\r\nexport function setUnit(unit) {\r\n  return (dispatch) => {\r\n    dispatch(_setUnit(unit));\r\n  };\r\n}\r\n\r\nexport function setMode(isDark) {\r\n  return (dispatch) => {\r\n    dispatch(_setMode(isDark));\r\n  };\r\n}\r\n\r\nconst _addCity = (city) => {\r\n  return { type: \"ADD_CITY\", city };\r\n};\r\n\r\nconst _removeCity = (id) => {\r\n  return { type: \"REMOVE_CITY\", id };\r\n};\r\n\r\nconst _setUnit = (unit) => {\r\n  return { type: \"SET_UNIT\", unit };\r\n};\r\n\r\nconst _setMode = (isDark) => {\r\n  return { type: \"SET_MODE\", isDark };\r\n};\r\n","export const setCookie = (cName, cValue, expDays) => {\r\n  let date = new Date();\r\n  date.setTime(date.getTime() + expDays * 24 * 60 * 60 * 1000);\r\n  const expires = \"expires=\" + date.toUTCString();\r\n  document.cookie = cName + \"=\" + cValue + \"; \" + expires;\r\n};\r\n\r\nexport const getCookieValues = () => {\r\n  const cDecoded = decodeURIComponent(document.cookie);\r\n  const { isDark, tempUnit, favCities } = Object.fromEntries(\r\n    cDecoded.split(\"; \").map((val) => val.split(\"=\"))\r\n  );\r\n  return { isDark, tempUnit, favCities };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { setUnit } from \"../store/actions\";\r\nimport { setCookie } from \"../services/cookieService\";\r\n\r\nconst UnitIcon = (props: any) => {\r\n  const [currUnit, setCurrUnit] = useState<null | string>(null);\r\n  const cookieName = \"tempUnit\";\r\n\r\n  useEffect(() => {\r\n    const storeUnit = props.tempUnit;\r\n    setCurrUnit(storeUnit);\r\n  }, [props, currUnit]);\r\n\r\n  const isCels = currUnit === \"c\" ? true : false;\r\n  const isWhite = !props.navbar || props.isDark ? \"-white\" : \"\";\r\n  const unitIconSrc = isCels\r\n    ? `../assets/images/celsius${isWhite}.png`\r\n    : `../assets/images/fahrenheit${isWhite}.png`;\r\n  const unitTitle = isCels ? \"Change to Fahrenheit\" : \"Change to Celsius\";\r\n\r\n  return (\r\n    <Unit\r\n      src={unitIconSrc}\r\n      title={unitTitle}\r\n      alt=\"Toggle Celsius / Fahrenheit\"\r\n      onClick={() => {\r\n        if (currUnit === \"c\") {\r\n          setCookie(cookieName, \"f\", 60);\r\n          props.setUnit(\"f\");\r\n        } else {\r\n          setCookie(cookieName, \"c\", 60);\r\n          props.setUnit(\"c\");\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst Unit = styled.img`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    tempUnit: state.appStore.tempUnit,\r\n    isDark: state.appStore.isDark,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setUnit,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnitIcon);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport UnitIcon from \"./UnitIcon\";\r\nimport { appOrange } from \"../theme\";\r\nimport { setCookie } from \"../services/cookieService\";\r\nimport { setMode } from \"../store/actions\";\r\n\r\nconst Header = (props: any) => {\r\n  const cookieName = \"isDark\";\r\n  const isDark = props.isDark;\r\n  const modeIconSrc = isDark\r\n    ? \"../assets/images/darkMode2.png\"\r\n    : \"../assets/images/lightMode.png\";\r\n  const modeTitle = isDark ? \"Change to Bright Mode\" : \"Change to Dark Mode\";\r\n\r\n  return (\r\n    <AppHeader>\r\n      <Logo>AbraKaWeather</Logo>\r\n      <Links>\r\n        <MenuItem>\r\n          <Link to=\"/\">HOME</Link>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Link to=\"/favourites\">MY CITIES</Link>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <UnitIcon navbar />\r\n        </MenuItem>\r\n        <SetMode\r\n          src={modeIconSrc}\r\n          title={modeTitle}\r\n          alt=\"Toggle Bright / Dark\"\r\n          onClick={() => {\r\n            if (isDark) {\r\n              setCookie(cookieName, false, 60);\r\n              props.setMode(false);\r\n            } else {\r\n              setCookie(cookieName, true, 60);\r\n              props.setMode(true);\r\n            }\r\n          }}\r\n        />\r\n      </Links>\r\n    </AppHeader>\r\n  );\r\n};\r\n\r\nconst AppHeader = styled.div`\r\n  max-width: 1440px;\r\n  padding: 0 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: auto;\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  color: ${appOrange};\r\n`;\r\nconst MenuItem = styled.div`\r\n  margin: 0 20px;\r\n`;\r\n\r\nconst Links = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-arround;\r\n`;\r\n\r\nconst SetMode = styled.img`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    tempUnit: state.appStore.tempUnit,\r\n    isDark: state.appStore.isDark,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  setMode,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import Axios from \"axios\";\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === \"production\" ? \"api/\" : \"//localhost:3030/api/\";\r\n\r\nexport const queryCity = async (q) => {\r\n  try {\r\n    const query = BASE_URL + \"cities/\" + q;\r\n    const res = await Axios.get(`${query}`);\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(\"City Query Failed\");\r\n    console.dir(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getCurrentWeather = async (cityCode) => {\r\n  try {\r\n    const query = BASE_URL + \"currentWeather/\" + cityCode;\r\n    const res = await Axios.get(`${query}`);\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(\"CurrentWeather Request Failed\");\r\n    console.dir(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getForecast = async (cityCode) => {\r\n  try {\r\n    const query = BASE_URL + \"forecast/\" + cityCode;\r\n    const res = await Axios.get(`${query}`);\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(\"Forecast Request Failed\");\r\n    console.dir(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getFarenheitForecast = async (cityCode) => {\r\n  try {\r\n    const query = BASE_URL + \"f/forecast/\" + cityCode;\r\n    const res = await Axios.get(`${query}`);\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(\"Farenheit Forecast Request Failed\");\r\n    console.dir(err);\r\n    throw err;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Toaster = () => {\r\n  return (\r\n    <ToastContainer\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      newestOnTop={false}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      className=\"toast-alert\"\r\n    />\r\n  );\r\n};\r\nexport default Toaster;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport const displayErrMsg = (txt: string) => {\r\n  return toast.error(\r\n    `Server Error: can not load ${txt}. Please try again later`,\r\n    {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    }\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport UnitIcon from \"./UnitIcon\";\r\n\r\nconst Temperature = (props: { temp: number | null }) => {\r\n  return (\r\n    <TempContainer>\r\n      {props.temp && (\r\n        <>\r\n          <Temp>{props.temp}</Temp>\r\n          <UnitIcon />\r\n        </>\r\n      )}\r\n    </TempContainer>\r\n  );\r\n};\r\n\r\nconst TempContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Temp = styled.p`\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  color: white;\r\n`;\r\n\r\nexport default Temperature;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Idx = { idx: number };\r\n\r\nconst ConditionIcon = ({ idx }: Idx) => {\r\n  const index = idx < 10 ? \"0\" + idx : idx;\r\n\r\n  return <ConditionImage src={`../assets/images/${index}-s.png`} />;\r\n};\r\n\r\nconst ConditionImage = styled.img`\r\n  width: 100px;\r\n`;\r\n\r\nexport default ConditionIcon;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Toaster from \"./ErrorMessage\";\r\nimport { displayErrMsg } from \"../utils/errorMessage\";\r\nimport Temperature from \"./Temperature\";\r\nimport ConditionIcon from \"./ConditionIcon\";\r\nimport { getCurrentWeather } from \"../services/weatherService\";\r\nimport { removeCity, addCity, setUnit } from \"../store/actions\";\r\nimport { CityProps, CurrentConditions } from \"../types/types\";\r\nimport { setCookie } from \"../services/cookieService\";\r\n\r\nconst Current = (props: any) => {\r\n  const [currWeather, setCurrWeather] = useState<[] | CurrentConditions[]>([]);\r\n  const isFav =\r\n    props.city &&\r\n    props.favCities.some((city: CityProps) => city.id === props.city.id);\r\n\r\n  useEffect(() => {\r\n    if (props.city && props.city.id) {\r\n      const getCurrWeatherData = async () => {\r\n        try {\r\n          const currConditions = await getCurrentWeather(props.city.id);\r\n          setCurrWeather(currConditions);\r\n        } catch {\r\n          displayErrMsg(`current weather conditions for ${props.city.name}`);\r\n        }\r\n      };\r\n      getCurrWeatherData();\r\n    }\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    const newCities = JSON.stringify(props.favCities);\r\n    setCookie(cookieName, newCities, 60);\r\n  }, [props.favCities]);\r\n\r\n  const cookieName = \"favCities\";\r\n\r\n  const getDayTime = () => {\r\n    if (!currWeather || !currWeather[0]) return null;\r\n    else return currWeather[0].isDayTime;\r\n  };\r\n  const isDay = getDayTime();\r\n  const heartIconSrc = isFav\r\n    ? \"../assets/images/red-heart.png\"\r\n    : \"../assets/images/outlined-heart_white.png\";\r\n  const heartTitle = isFav ? \"Remove from favourites\" : \"Add to favourites\";\r\n  const containerBgc = isDay ? \"#174385\" : \"#344463\";\r\n  const temp = () => {\r\n    if (!currWeather || !currWeather[0]) return null;\r\n    else {\r\n      const currTemp =\r\n        props.tempUnit === \"c\"\r\n          ? currWeather[0].Temperature.Metric.Value\r\n          : currWeather[0].Temperature.Imperial.Value;\r\n      return Math.round(currTemp);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DailyContaier style={{ backgroundColor: containerBgc }}>\r\n      {props.city && props.city.name && (\r\n        <CardTitle>\r\n          <LikeBtn\r\n            src={heartIconSrc}\r\n            title={heartTitle}\r\n            alt=\"\"\r\n            onClick={async () => {\r\n              if (isFav) {\r\n                props.removeCity(props.city.id);\r\n              } else {\r\n                props.addCity(props.city);\r\n              }\r\n            }}\r\n          />\r\n          <CityName>{props.city.name}</CityName>\r\n        </CardTitle>\r\n      )}\r\n      {currWeather && (\r\n        <>\r\n          <TempAndCondition>\r\n            <Temperature temp={temp()} />\r\n            {currWeather[0] && currWeather[0].WeatherIcon && (\r\n              <ConditionIcon idx={currWeather[0].WeatherIcon} />\r\n            )}\r\n          </TempAndCondition>\r\n          {currWeather[0] && currWeather[0].WeatherText && (\r\n            <ConditionText>{currWeather[0].WeatherText}</ConditionText>\r\n          )}\r\n        </>\r\n      )}\r\n      <Toaster />\r\n    </DailyContaier>\r\n  );\r\n};\r\n\r\nconst cursorPointer = `&:hover {\r\n  cursor: pointer;\r\n}`;\r\n\r\nconst flexAlignCenter = `\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst DailyContaier = styled.div`\r\n  color: white;\r\n  max-height: 50vh;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  ${flexAlignCenter}\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst LikeBtn = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  ${cursorPointer};\r\n`;\r\n\r\nconst CityName = styled.h2`\r\n  color: white;\r\n`;\r\n\r\nconst TempAndCondition = styled.div`\r\n  ${flexAlignCenter}\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst ConditionText = styled.p`\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  color: white;\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    tempUnit: state.appStore.tempUnit,\r\n    favCities: state.appStore.favCities,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  removeCity,\r\n  addCity,\r\n  setUnit,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Current);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport Temperature from \"./Temperature\";\r\nimport ConditionIcon from \"./ConditionIcon\";\r\nimport Toaster from \"./ErrorMessage\";\r\nimport { displayErrMsg } from \"../utils/errorMessage\";\r\nimport { appOrange } from \"../theme\";\r\nimport { getForecast, getFarenheitForecast } from \"../services/weatherService\";\r\nimport { DailyForecast } from \"../types/types\";\r\n\r\nconst Forecast = (props: any) => {\r\n  const [forecast, setForecast] = useState<[] | DailyForecast[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (props.city && props.city.id) {\r\n      const getForecastData = async () => {\r\n        try {\r\n          const forecast =\r\n            props.tempUnit === \"c\"\r\n              ? await getForecast(props.city.id)\r\n              : await getFarenheitForecast(props.city.id);\r\n          setForecast(forecast.DailyForecasts);\r\n        } catch {\r\n          displayErrMsg(`forecast data for ${props.city.name}`);\r\n        }\r\n      };\r\n      getForecastData();\r\n    }\r\n  }, [props]);\r\n\r\n  const renderForecast =\r\n    forecast.length === 0 ? (\r\n      <Loading>Loading Forecast for next 5 Days...</Loading>\r\n    ) : (\r\n      <ForecastContainer>\r\n        {forecast.map((daily, idx) => {\r\n          return (\r\n            <DayForecast key={idx}>\r\n              <Day>{moment(daily.Date).format(\"ddd\")}</Day>\r\n              <Conditions>\r\n                <Min>\r\n                  <Temperature\r\n                    temp={Math.round(daily.Temperature.Minimum.Value)}\r\n                  />\r\n                  <ConditionIcon idx={daily.Night.Icon} />\r\n                </Min>\r\n                <Max>\r\n                  <Temperature\r\n                    temp={Math.round(daily.Temperature.Maximum.Value)}\r\n                  />\r\n                  <ConditionIcon idx={daily.Day.Icon} />\r\n                </Max>\r\n              </Conditions>\r\n            </DayForecast>\r\n          );\r\n        })}\r\n        <Toaster />\r\n      </ForecastContainer>\r\n    );\r\n  return renderForecast;\r\n};\r\n\r\nconst Loading = styled.h2`\r\n  color: ${appOrange};\r\n`;\r\nconst ForecastContainer = styled.div`\r\n  background-color: #61dafb;\r\n  max-width: max-content;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  border-radius: 8px;\r\n`;\r\nconst DayForecast = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5px 0 0;\r\n`;\r\nconst Day = styled.p`\r\n  padding-right: 20px;\r\n  color: white;\r\n  @media (max-width: 400px) {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nconst Conditions = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n`;\r\nconst Min = styled.div`\r\n  display: flex;\r\n`;\r\nconst Max = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    tempUnit: state.appStore.tempUnit,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Forecast);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Grid, ClickAwayListener } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport { queryCity } from \"../services/weatherService\";\r\nimport Current from \"../components/Current\";\r\nimport Forecast from \"../components/Forecast\";\r\nimport Toaster from \"../components/ErrorMessage\";\r\nimport { displayErrMsg } from \"../utils/errorMessage\";\r\n\r\nimport { City, CityProps } from \"../types/types\";\r\n\r\nconst Home = (props: any) => {\r\n  const [inputCities, setInputCities] = useState<[] | City[]>([]);\r\n  const [isOpen, setOpen] = useState(false);\r\n  const [currCity, setCurrCity] = useState<CityProps>(\r\n    props.favCities[0] || { id: \"215854\", name: \"Tel Aviv\" }\r\n  );\r\n\r\n  const handleChange = async (e: any) => {\r\n    if (!isOpen) setOpen(true);\r\n    const q = e.target.value;\r\n    if (q) {\r\n      try {\r\n        const data = await queryCity(q);\r\n        setInputCities(data);\r\n      } catch {\r\n        displayErrMsg(\"cities list\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const selectCity = async ({ id, name }: CityProps) => {\r\n    setCurrCity({ id, name });\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickAway = () => setOpen(false);\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <Title>Always Keeping you Above the Weather</Title>\r\n      <CitySearch>\r\n        <SearchInput\r\n          type=\"text\"\r\n          placeholder=\"search a city\"\r\n          onChange={(e) => handleChange(e)}\r\n        />\r\n        {inputCities.length > 0 && isOpen && (\r\n          <ClickAwayListener onClickAway={handleClickAway}>\r\n            <CitiesList>\r\n              {inputCities.map((city, idx) => {\r\n                return (\r\n                  <div\r\n                    key={idx}\r\n                    className=\"city-item\"\r\n                    onClick={() =>\r\n                      selectCity({\r\n                        id: city.Key,\r\n                        name: city.LocalizedName,\r\n                      })\r\n                    }\r\n                  >\r\n                    <Option>{city.LocalizedName}</Option>\r\n                  </div>\r\n                );\r\n              })}\r\n            </CitiesList>\r\n          </ClickAwayListener>\r\n        )}\r\n      </CitySearch>\r\n      <Container className=\"main-contaier\">\r\n        <Grid container spacing={4} alignItems=\"center\">\r\n          <Grid item xs={12} sm={12} md={12} xl={6}>\r\n            <Current city={currCity} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12} xl={6}>\r\n            <Forecast city={currCity} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Toaster />\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nconst HomeContainer = styled.div`\r\n  max-width: 1440px;\r\n  min-height: 85vh;\r\n  margin: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-family: ShadowsIntoLight;\r\n  letter-spacing: 1.2px;\r\n`;\r\n\r\nconst CitySearch = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  width: 60%;\r\n  padding: 10px;\r\n  margin-bottom: 30px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst CitiesList = styled.div`\r\n  width: 60%;\r\n  position: absolute;\r\n  background-color: #1cb6e6;\r\n  border-color: #183640;\r\n  border-radius: 8px;\r\n  left: 20%;\r\n  top: 40px;\r\n`;\r\n\r\nconst Option = styled.p`\r\n  color: white;\r\n  font-size: 18px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    favCities: state.appStore.favCities,\r\n    isDark: state.appStore.isDark,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { CityProps } from \"../types/types\";\r\nimport Current from \"../components/Current\";\r\nconst Favourites = (props: any) => {\r\n  const [favCities, setFavCities] = useState<[] | CityProps[]>([]);\r\n\r\n  useEffect(() => {\r\n    setFavCities(props.favCities);\r\n  }, [props.favCities]);\r\n\r\n  if (favCities.length < 1) {\r\n    return (\r\n      <FavouritesContainer>\r\n        <Message>\r\n          <h2>Your List is Empty</h2>\r\n          <p>\r\n            Go back to <Link to=\"/\">home page</Link> and add cities to your\r\n            favourites\r\n          </p>\r\n        </Message>\r\n      </FavouritesContainer>\r\n    );\r\n  } else {\r\n    return (\r\n      <FavouritesContainer>\r\n        {favCities.map((city) => {\r\n          return (\r\n            <CityCard>\r\n              <Current city={city} />\r\n            </CityCard>\r\n          );\r\n        })}\r\n      </FavouritesContainer>\r\n    );\r\n  }\r\n};\r\n\r\nconst FavouritesContainer = styled.div`\r\n  min-height: 85vh;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto;\r\n  justify-content: center;\r\n`;\r\n\r\nconst CityCard = styled.div`\r\n  min-width: 30%;\r\n  margin: 0 5%;\r\n  @media (max-width: 1100px) {\r\n    margin: 2% 5%;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    favCities: state.appStore.favCities,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favourites);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { appOrange } from \"../theme\";\r\n\r\nconst Footer = () => {\r\n  return <Note>Created by Oshri Hayke for Herolo</Note>;\r\n};\r\n\r\nconst Note = styled.h3`\r\n  color: ${appOrange};\r\n  padding: 20px;\r\n  margin: 0;\r\n`;\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { GlobalStyles } from \"./globalStyles\";\r\nimport { darkTheme, lightTheme } from \"./theme\";\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./pages/Home\";\r\nimport Favourites from \"./pages/Favourites\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"./App.css\";\r\n\r\ninterface Props {\r\n  isDark: boolean;\r\n}\r\n\r\nfunction App(props: Props) {\r\n  const { isDark } = props;\r\n\r\n  return (\r\n    <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\r\n      <GlobalStyles />\r\n      <div className=\"App\">\r\n        <Router>\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/favourites\">\r\n              <Favourites />\r\n            </Route>\r\n          </Switch>\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    isDark: state.appStore.isDark,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { getCookieValues } from \"../services/cookieService\";\r\nimport { AppState } from \"../types/types\";\r\n\r\nconst data = getCookieValues();\r\nconst { favCities, tempUnit, isDark } = data;\r\nconst darkMode = isDark ? JSON.parse(isDark) : false;\r\nconst unit = tempUnit ? tempUnit : \"c\";\r\nconst cities = favCities ? JSON.parse(favCities) : [];\r\n\r\nconst initialState: AppState = {\r\n  favCities: cities,\r\n  tempUnit: unit,\r\n  isDark: darkMode,\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case \"ADD_CITY\":\r\n      return {\r\n        ...state,\r\n        favCities: [...state.favCities, action.city],\r\n      };\r\n    case \"REMOVE_CITY\":\r\n      return {\r\n        ...state,\r\n        favCities: state.favCities.filter((city) => city.id !== action.id),\r\n      };\r\n    case \"SET_UNIT\":\r\n      return { ...state, tempUnit: action.unit };\r\n    case \"SET_MODE\":\r\n      return { ...state, isDark: action.isDark };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { createStore, applyMiddleware, combineReducers, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  appStore: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { store } from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}